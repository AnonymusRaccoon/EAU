!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return r});var r,a=function(){return function(e,t,n,r,a,o,i){this.name=e,this.appid=t,this.thumbnail=n,this.launcher=r,this.launcherID=a,this.isInstalled=o,this.localPath=i}}();!function(e){e[e.LocalOnly=0]="LocalOnly",e[e.Steam=1]="Steam"}(r||(r={}))},function(e,t,n){"use strict";n.r(t),n.d(t,"setup",function(){return l});var r,a,o=n(0),i=n(4).ipcRenderer,s=5,c=0,u="76561198196430655";function l(){s=0,r=document.querySelector(".carousel"),$.getJSON("http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v0001/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+u+"&format=json",JSON,function(e){if(0!=e.response.total_count)for(var t=[],n=0;n<e.response.total_count;n++){var r=e.response.games[n];t[n]=new f(r.appid,r.name,r.img_logo_url),n+1==e.response.total_count&&d(t)}else console.log("no recent played games")})}function d(e){for(var t=document.getElementsByClassName("carousel__cell"),n=0;n<t.length;n++)n<e.length?(t[n].src="https://steamcdn-a.akamaihd.net/steam/apps/"+e[n].AppId+"/header.jpg",t[n].dataset.game=JSON.stringify(new o.a(null,e[n].AppId.toString(),t[n].srcn,o.b.Steam,"Steam",null,null)),t[n].id=n.toString(),t[n].addEventListener("click",function(){p(event.target,!1)})):t[n].classList.add("disabled");var r=document.createElement("Useless-div");r.id=Math.round(e.length/2).toString(),p(r,!1),r.remove}function p(e,t){null==a&&(a=e),a!=e&&a.classList.remove("higlight"),c=40*(s-e.id)+c,s!=e.id||0!=t?(e.classList.add("higlight"),r.style.transform="translateZ(-1000px) rotateY("+c+"deg)",s=e.id,a=e):i.send("LaunchGame",e.dataset.game)}var f=function(){return function(e,t,n){this.AppId=e,this.name=t,this.thumb=n}}()},function(e,t,n){const r=n(4),a=n(7),o=n(8);e.exports=class{constructor(e){this.path=a.join((r.app||r.remote.app).getPath("userData"),e+".json"),this.data=function(e){try{return JSON.parse(o.readFileSync(e))}catch{return{}}}(this.path)}get(e){return this.data[e]}set(e,t){this.data[e]=t,o.writeFileSync(this.path,JSON.stringify(this.data))}}},function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(2);function o(){var e;e=function(){var e=navigator.userAgent.toLowerCase();if(console.log("Agent: "+e),e.indexOf(" electron/")>-1){var t=new(n(2))("account").get("steam");return null!=t?t:"76561198250223174"}return console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),"76561198250223174"}(),$.get("https://api.steampowered.com/IPlayerService/GetOwnedGames/v1/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+e+"&include_appinfo=1&include_played_free_games=1&appids_filter=&format=json",function(e){for(var t=[],n=0;n<e.response.game_count;n++){var o=e.response.games[n],i="https://steamcdn-a.akamaihd.net/steam/apps/"+o.appid+"/header.jpg";t[n]=new r.a(o.name,o.appid,i,r.b.Steam,null,!0,null)}var s=new a("Games");s.set("games",t)})}n.d(t,"populateGrid",function(){return s});var i=n(4).ipcRenderer;function s(){var e,t=(e=n(2),navigator.userAgent.toLowerCase().indexOf(" electron/")>-1?new e("Games").get("games"):(console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),null));o();for(var r=document.getElementById("library"),a=function(){var e=t[s],n="<img src='"+e.thumbnail+"'/> <p>"+e.name+"</p>",a=document.createElement("div");a.className="game",a.onclick=function(){var t;t=e,i.send("LaunchGame",t)},e.isInstalled&&(n+='<img src="../../dist/drawables/installed.svg" style="position: absolute; top: 0; right: 0; padding: 5px;"/>'),a.innerHTML=n,null!=r&&r.appendChild(a)},s=0;s<t.length;s++)a()}},function(e,t){e.exports=require("electron")},function(e,t,n){n(6),e.exports=n(1)},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n(3);function o(){$("#content").load("fragments/home.html",function(){Object(r.setup)(),Object(a.populateGrid)()}),document.getElementById("title").innerHTML="EAU"}$(function(){o(),document.getElementById("title").onclick=function(){o()},document.getElementById("searchBtn").onclick=function(){var e;(e=document.getElementById("searchInput")).value="",e.focus()},document.getElementById("settingsBtn").onclick=function(){$("#content").load("fragments/settings.html",function(){}),document.getElementById("title").innerHTML="<i class='icon fas fa-arrow-left'></i>  Settings"}}),n(3),n(1)},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("fs")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,