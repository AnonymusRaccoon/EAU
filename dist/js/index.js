!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){"use strict";n.r(t),n.d(t,"setup",function(){return c});var a,r,o=5,i=0,s="76561198196430655";function c(){o=0,a=document.querySelector(".carousel"),$.getJSON("http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v0001/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+s+"&format=json",JSON,function(e){if(0!=e.response.total_count)for(var t=[],n=0;n<e.response.total_count;n++){var a=e.response.games[n];t[n]=new d(a.appid,a.name,a.img_logo_url),n+1==e.response.total_count&&l(t)}else console.log("no recent played games")})}function l(e){for(var t=document.getElementsByClassName("carousel__cell"),n=0;n<t.length;n++)n<e.length?(t[n].src="https://steamcdn-a.akamaihd.net/steam/apps/"+e[n].AppId+"/header.jpg",t[n].dataset.game=e[n].AppId,t[n].id=n.toString(),t[n].addEventListener("click",function(){u(event.target,!1)})):t[n].classList.add("disabled");var a=document.createElement("Useless-div");a.id=Math.round(e.length/2).toString(),u(a,!1),a.remove}function u(e,t){if(null==r&&(r=e),r!=e&&r.classList.remove("higlight"),i=40*(o-e.id)+i,o==e.id&&0==t)return n=e.dataset.game,void console.log("launch game"+n);var n;e.classList.add("higlight"),console.log("last selected "+r.id),a.style.transform="translateZ(-1000px) rotateY("+i+"deg)",o=e.id,r=e}var d=function(){return function(e,t,n){this.AppId=e,this.name=t,this.thumb=n}}()},function(e,t,n){const a=n(5),r=n(6),o=n(7);e.exports=class{constructor(e){this.path=r.join((a.app||a.remote.app).getPath("userData"),e+".json"),this.data=function(e){try{return JSON.parse(o.readFileSync(e))}catch{return{}}}(this.path)}get(e){return this.data[e]}set(e,t){this.data[e]=t,o.writeFileSync(this.path,JSON.stringify(this.data))}}},function(e,t,n){"use strict";n.r(t);var a,r=function(){return function(e,t,n,a,r,o,i){this.name=e,this.appid=t,this.thumbnail=n,this.launcher=a,this.launcherID=r,this.isInstalled=o,this.localPath=i}}();!function(e){e[e.LocalOnly=0]="LocalOnly",e[e.Steam=1]="Steam"}(a||(a={}));var o=n(1);function i(){var e;e=function(){var e=navigator.userAgent.toLowerCase();if(console.log("Agent: "+e),e.indexOf(" electron/")>-1){var t=new(n(1))("account").get("steam");return null!=t?t:"76561198250223174"}return console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),"76561198250223174"}(),$.get("https://api.steampowered.com/IPlayerService/GetOwnedGames/v1/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+e+"&include_appinfo=1&include_played_free_games=1&appids_filter=&format=json",function(e){for(var t=[],n=0;n<e.response.game_count;n++){var i=e.response.games[n],s="https://steamcdn-a.akamaihd.net/steam/apps/"+i.appid+"/header.jpg";t[n]=new r(i.name,i.appid,s,a.Steam,null,!0,null)}var c=new o("Games");c.set("games",t)})}function s(){var e,t=(e=n(1),navigator.userAgent.toLowerCase().indexOf(" electron/")>-1?new e("Games").get("games"):(console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),null));i();for(var a=document.getElementById("library"),r=function(){var e=t[o],n="<img src='"+e.thumbnail+"'/> <p>"+e.name+"</p>",r=document.createElement("div");r.className="game",r.onclick=function(){var t;t=e,console.log(t.name)},e.isInstalled&&(n+='<img src="../../dist/drawables/installed.svg" style="position: absolute; top: 0; right: 0; padding: 5px;"/>'),r.innerHTML=n,null!=a&&a.appendChild(r)},o=0;o<t.length;o++)r()}n.d(t,"populateGrid",function(){return s})},function(e,t,n){n(4),e.exports=n(0)},function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(2);function o(){$("#content").load("fragments/home.html",function(){Object(a.setup)(),Object(r.populateGrid)()}),document.getElementById("title").innerHTML="EAU"}$(function(){o(),document.getElementById("title").onclick=function(){o()},document.getElementById("searchBtn").onclick=function(){var e;(e=document.getElementById("searchInput")).value="",e.focus()},document.getElementById("settingsBtn").onclick=function(){$("#content").load("fragments/settings.html",function(){}),document.getElementById("title").innerHTML="<i class='icon fas fa-arrow-left'></i>  Settings"}}),n(2),n(0)},function(e,t){e.exports=require("electron")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("fs")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,