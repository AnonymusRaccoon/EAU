!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=6)}([function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});var a,r=function(){return function(e,t,n,a,r,o,i){this.name=e,this.appid=t,this.thumbnail=n,this.launcher=a,this.launcherID=r,this.isInstalled=o,this.localPath=i}}();!function(e){e[e.LocalOnly=0]="LocalOnly",e[e.Steam=1]="Steam"}(a||(a={}))},function(e,t,n){"use strict";n.r(t),n.d(t,"setup",function(){return u});var a,r,o=n(0),i=n(2),s=n(4).ipcRenderer,c=5,l=0;function u(){c=5,a=null,l=0,[],r=null,c=0,a=document.querySelector(".carousel"),$.getJSON("http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v0001/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+Object(i.a)()+"&format=json",JSON,function(e){if(0!=e.response.total_count)for(var t=[],n=0;n<e.response.total_count;n++){var a=e.response.games[n];t[n]=new f(a.appid,a.name,a.img_logo_url),n+1==e.response.total_count&&d(t)}else console.log("no recent played games")})}function d(e){for(var t=document.getElementsByClassName("carousel__cell"),n=0;n<t.length;n++)n<e.length?(t[n].src="https://steamcdn-a.akamaihd.net/steam/apps/"+e[n].AppId+"/header.jpg",t[n].dataset.game=JSON.stringify(new o.a(null,e[n].AppId,t[n].srcn,o.b.Steam,null,null,null)),t[n].id=n.toString(),t[n].addEventListener("click",function(){p(event.target,!1)})):t[n].classList.add("disabled");var a=document.createElement("Useless-div");a.id=Math.round(e.length/2).toString(),p(a,!1),a.remove}function p(e,t){null==r&&(r=e),r!=e&&r.classList.remove("higlight"),l=40*(c-e.id)+l,c!=e.id||0!=t?(e.classList.add("higlight"),a.style.transform="translateZ(-1000px) rotateY("+l+"deg)",c=e.id,r=e):s.send("LaunchGame",e.dataset.game)}var f=function(){return function(e,t,n){this.AppId=e,this.name=t,this.thumb=n}}()},function(e,t,n){"use strict";function a(){var e=navigator.userAgent.toLowerCase();if(console.log("Agent: "+e),e.indexOf(" electron/")>-1){var t=new(n(3))("config").get("steam");return null!=t?t:"76561198196430655"}return console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),"76561198196430655"}n.d(t,"a",function(){return a})},function(e,t,n){const a=n(4),r=n(8),o=n(9);e.exports=class{constructor(e){this.path=r.join((a.app||a.remote.app).getPath("userData"),e+".json"),this.data=function(e){try{return JSON.parse(o.readFileSync(e))}catch{return{}}}(this.path)}get(e){return this.data[e]}set(e,t){this.data[e]=t,o.writeFileSync(this.path,JSON.stringify(this.data))}}},function(e,t){e.exports=require("electron")},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(0),o=n(3);function i(){var e;e=a.a(),$.get("https://api.steampowered.com/IPlayerService/GetOwnedGames/v1/?key=7C218E8D1347C3CD6CB8117E5ED533BC&steamid="+e+"&include_appinfo=1&include_played_free_games=1&appids_filter=&format=json",function(e){for(var t=[],n=0;n<e.response.game_count;n++){var a=e.response.games[n],i="https://steamcdn-a.akamaihd.net/steam/apps/"+a.appid+"/header.jpg";t[n]=new r.a(a.name,a.appid,i,r.b.Steam,null,!0,null)}var s=new o("Games");s.set("games",t)})}n.d(t,"populateGrid",function(){return c});var s=n(4).ipcRenderer;function c(){var e=navigator.userAgent.toLowerCase().indexOf(" electron/")>-1?new o("Games").get("games"):(console.log("AGENT IS NOT ELECTRON, NO HANDLING FOR NOW"),null);i();for(var t=document.getElementById("library"),n=function(){var n=e[a],r="<img src='"+n.thumbnail+"'/> <p>"+n.name+"</p>",o=document.createElement("div");o.className="game",o.onclick=function(){var e;e=n,s.send("LaunchGame",e)},n.isInstalled&&(r+='<img src="../../dist/drawables/installed.svg" style="position: absolute; top: 0; right: 0; padding: 5px;"/>'),o.innerHTML=r,null!=t&&t.appendChild(o)},a=0;a<e.length;a++)n()}},function(e,t,n){n(7),e.exports=n(1)},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(5),o=n(3);function i(){$("#content").load("fragments/home.html",function(){Object(a.setup)(),Object(r.populateGrid)()}),document.getElementById("title").innerHTML="EAU"}$(function(){new o("config").get("dark-mode")&&$("#body").addClass("dark-mode"),i(),document.getElementById("title").onclick=function(){i()},document.getElementById("searchBtn").onclick=function(){var e;(e=document.getElementById("searchInput")).value="",e.focus()},document.getElementById("settingsBtn").onclick=function(){$("#content").load("fragments/settings.html",function(){$(".switch").find("input[type=checkbox]").on("change",function(){var e=$(this).prop("checked");e?$("#body").addClass("dark-mode"):$("#body").removeClass("dark-mode");var t=new o("config");t.set("dark-mode",e)}),$("#body").hasClass("dark-mode")&&$(".switch").find("input[type=checkbox]").prop("checked",!0)}),document.getElementById("title").innerHTML="<i class='icon fas fa-arrow-left'></i>  Settings"}}),n(5),n(1)},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("fs")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,